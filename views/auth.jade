//- views/auth.jade
extends layout

block content
  style.
    :root{
      --bg1:#0f172a; --bg2:#111827; --ring:#60a5fa; --violet:#a78bfa;
      --glass:rgba(255,255,255,.06); --border:rgba(255,255,255,.14);
      --text:#e5e7eb; --muted:#9ca3af; --danger:#fca5a5;
      --radius:16px; --shadow:0 16px 40px rgba(0,0,0,.45);
    }
    body{
      background:linear-gradient(180deg, var(--bg1), var(--bg2));
      color:var(--text);
    }
    .auth-wrap{max-width:820px;margin:2.5rem auto;padding:0 1rem;}
    .hero{text-align:center;margin-bottom:1.5rem;}
    .hero h2{margin:.25rem 0 .5rem;font-size:1.9rem;}
    .hero p{margin:0;color:var(--muted);}
    .grid{display:grid;grid-template-columns:1fr 1fr;gap:20px}
    @media (max-width:720px){.grid{grid-template-columns:1fr}}
    .form-card{
      background:rgba(255,255,255,.05);
      border:1px solid var(--border); border-radius:var(--radius);
      box-shadow:var(--shadow); padding:1.5rem; backdrop-filter:blur(10px);
    }
    .form-card h3{margin:0 0 1rem;font-size:1.2rem;}
    label{display:block;margin:.6rem 0 .35rem;font-weight:600}
    .field{position:relative;}
    input[type="email"],input[type="password"]{
      width:100%;padding:.75rem 1rem;border-radius:12px;border:1px solid var(--border);
      background:rgba(255,255,255,.04);color:var(--text);
    }
    input:focus{border-color:var(--ring);outline:none}
    .eye-btn{position:absolute;right:.5rem;top:50%;transform:translateY(-50%);
      background:none;border:none;color:var(--muted);cursor:pointer}
    .btn{
      margin-top:1rem;width:100%;padding:.8rem 1rem;border-radius:12px;
      border:1px solid rgba(96,165,250,.45);
      background:linear-gradient(135deg, rgba(96,165,250,.25), rgba(167,139,250,.22));
      color:var(--text);font-weight:700;cursor:pointer;
    }
    .btn:hover{background:linear-gradient(135deg, rgba(96,165,250,.35), rgba(167,139,250,.3))}
    .hint{color:var(--muted);font-size:.92rem;margin-top:.5rem;text-align:center}

  .auth-wrap
    .hero
      h2 Auth Page
      if user
        p Welcome back, #{user.email}.
      else
        p Access the task board after you log in.

    if !user
      .grid
        .form-card
          h3 Create an account
          form#signupForm
            label(for='suEmail') Email
            .field
              input#suEmail(type='email' placeholder='you@example.com' required)
            label(for='suPassword') Password
            .field
              input#suPassword(type='password' placeholder='••••••••' required)
              button.eye-btn(type='button' data-target='suPassword') 👁
            button.btn(type='submit') Sign Up
        .form-card
          h3 Welcome back
          form#loginForm
            label(for='liEmail') Email
            .field
              input#liEmail(type='email' placeholder='you@example.com' required)
            label(for='liPassword') Password
            .field
              input#liPassword(type='password' placeholder='••••••••' required)
              button.eye-btn(type='button' data-target='liPassword') 👁
            button.btn(type='submit') Log In

      p.hint After signing up or logging in, you will be taken to the Task Board.

    else
      .form-card
        h3 You are logged in
        form(action="/users/logout" method="post")
          button.btn(type="submit") Log Out
      p.hint Click logout to sign out and return to login/signup.

  if !user
    script.
      (function () {
        const signupForm = document.getElementById('signupForm');
        const loginForm = document.getElementById('loginForm');
        const eyeBtns = document.querySelectorAll('.eye-btn');

        eyeBtns.forEach(btn=>{
          btn.addEventListener('click', ()=>{
            const id = btn.getAttribute('data-target');
            const inp = document.getElementById(id);
            if(!inp) return;
            const isPw = inp.type === 'password';
            inp.type = isPw ? 'text' : 'password';
            btn.textContent = isPw ? '🙈' : '👁';
          });
        });

        signupForm.onsubmit = async (e) => {
          e.preventDefault();
          const email = document.getElementById('suEmail').value.trim();
          const password = document.getElementById('suPassword').value;
          const res = await fetch('/users/signup', {
            method:'POST', headers:{'Content-Type':'application/json'},
            body: JSON.stringify({ email, password })
          });
          const data = await res.json();
          if (!res.ok) return alert(data.error || 'Sign up failed');
          alert('Signed up as ' + data.user.email);
          window.location.href = '/board';
        };

        loginForm.onsubmit = async (e) => {
          e.preventDefault();
          const email = document.getElementById('liEmail').value.trim();
          const password = document.getElementById('liPassword').value;
          const res = await fetch('/users/login', {
            method:'POST', headers:{'Content-Type':'application/json'},
            body: JSON.stringify({ email, password })
          });
          const data = await res.json();
          if (!res.ok) return alert(data.error || 'Login failed');
          alert('Logged in as ' + data.user.email);
          window.location.href = '/board';
        };
      })();
