//- views/auth.jade
extends layout

block content
  style.
    :root{
      --bg-main: #f0fdf4;
      --bg-card: #ffffff;
      --border: #d1fae5;
      --text: #1f2937;
      --text-muted: #6b7280;
      --primary: #059669;
      --primary-hover: #047857;
      --success: #10b981;
      --warning: #f59e0b;
      --accent: #06b6d4;
      --radius: 8px;
      --shadow: 0 2px 8px rgba(5, 150, 105, 0.1);
    }
    
    body{
      margin: 0;
      background: var(--bg-main);
      color: var(--text);
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      line-height: 1.5;
    }
    
    .auth-wrap{
      max-width: 1000px;
      margin: 2rem auto;
      padding: 0 1rem;
    }
    
    .shell{
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 2rem;
      align-items: start;
    }
    
    @media (max-width: 768px){
      .shell{
        grid-template-columns: 1fr;
      }
      .visual{
        order: 2;
      }
      .panel{
        order: 1;
      }
    }

    /* Left visual section */
    .visual{
      background: var(--bg-card);
      border: 1px solid var(--border);
      border-radius: var(--radius);
      padding: 2rem;
      box-shadow: var(--shadow);
    }
    
    .brand{
      display: flex;
      align-items: center;
      gap: 0.75rem;
      margin-bottom: 1.5rem;
    }
    
    .logo{
      width: 32px;
      height: 32px;
      background: var(--primary);
      border-radius: 6px;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-weight: bold;
    }
    
    .brand h1{
      font-size: 1.25rem;
      margin: 0;
      color: var(--text);
      font-weight: 600;
    }
    
    .visual-copy{
      margin-top: 1rem;
    }
    
    .kicker{
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      font-size: 0.875rem;
      color: var(--text-muted);
      background: #ecfdf5;
      padding: 0.25rem 0.75rem;
      border-radius: 20px;
      margin-bottom: 1rem;
      border: 1px solid #bbf7d0;
    }
    
    .kicker .dot{
      width: 8px;
      height: 8px;
      border-radius: 50%;
      background: var(--success);
    }
    
    .visual h2{
      margin: 0.5rem 0;
      font-size: 1.5rem;
      line-height: 1.3;
      color: var(--text);
    }
    
    .visual p{
      color: var(--text-muted);
      margin: 0.5rem 0 1rem 0;
    }
    
    .badges{
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
      margin-bottom: 1rem;
    }
    
    .badge{
      padding: 0.25rem 0.75rem;
      border: 1px solid #a7f3d0;
      border-radius: 20px;
      font-size: 0.75rem;
      color: #065f46;
      background: #ecfdf5;
    }
    
    .hintline{
      display: flex;
      align-items: center;
      gap: 0.5rem;
      color: var(--text-muted);
      font-size: 0.875rem;
    }
    
    .hintline svg{
      color: var(--primary);
    }

    /* Right panel */
    .panel{
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }
    
    .hero{
      text-align: center;
      margin-bottom: 1rem;
    }
    
    .hero h2{
      margin: 0 0 0.5rem 0;
      font-size: 1.75rem;
      color: var(--text);
    }
    
    .hero p{
      margin: 0;
      color: var(--text-muted);
    }
    
    .status{
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      padding: 0.5rem 1rem;
      border-radius: 20px;
      border: 1px solid #fef3c7;
      background: #fffbeb;
      font-size: 0.875rem;
      color: #92400e;
      margin-top: 0.5rem;
    }
    
    .status .pill{
      width: 8px;
      height: 8px;
      border-radius: 50%;
      background: var(--warning);
    }

    .grid{
      display: grid;
      grid-template-columns: 1fr;
      gap: 1rem;
    }
    
    @media (min-width: 600px){
      .grid{
        grid-template-columns: 1fr 1fr;
      }
    }

    /* Cards & inputs */
    .form-card{
      background: var(--bg-card);
      border: 1px solid var(--border);
      border-radius: var(--radius);
      box-shadow: var(--shadow);
      padding: 1.5rem;
    }
    
    .form-card h3{
      margin: 0 0 1rem 0;
      font-size: 1.125rem;
      color: var(--text);
    }
    
    .divider{
      height: 1px;
      background: var(--border);
      margin: 0 0 1rem 0;
    }

    label{
      display: block;
      margin: 1rem 0 0.25rem 0;
      font-weight: 500;
      font-size: 0.875rem;
      color: var(--text);
    }
    
    .field{
      position: relative;
    }
    
    input[type="email"], input[type="password"]{
      width: 100%;
      padding: 0.75rem;
      border-radius: var(--radius);
      border: 1px solid var(--border);
      background: var(--bg-card);
      color: var(--text);
      font-size: 1rem;
      transition: border-color 0.2s ease;
      box-sizing: border-box;
    }
    
    input::placeholder{
      color: var(--text-muted);
    }
    
    input:focus{
      border-color: var(--primary);
      outline: none;
      box-shadow: 0 0 0 3px rgba(5, 150, 105, 0.1);
    }

    .btn{
      margin-top: 1rem;
      width: 100%;
      padding: 0.75rem 1rem;
      border-radius: var(--radius);
      border: none;
      background: var(--primary);
      color: white;
      font-weight: 500;
      font-size: 1rem;
      cursor: pointer;
      transition: background-color 0.2s ease;
    }
    
    .btn:hover{
      background: var(--primary-hover);
    }
    
    .btn:active{
      transform: translateY(1px);
    }

    .form-hint{
      display: flex;
      align-items: center;
      gap: 0.5rem;
      color: var(--text-muted);
      font-size: 0.875rem;
      margin-top: 0.75rem;
    }
    
    .hint{
      color: var(--text-muted);
      font-size: 0.875rem;
      margin-top: 1rem;
      text-align: center;
    }

  .auth-wrap
    .shell
      .visual
        .brand
          .logo T
          h1 TaskBoard
        .visual-copy
          span.kicker
            span.dot
            | Secure workspace access
          h2 Simple sign-in to access your tasks
          p Keep work organized with a lightweight board and clear views.
          .badges
            span.badge Email-based sign-in
            span.badge JWT cookie
            span.badge Mobile friendly
          .hintline
            svg(width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round")
              path(d="M12 20h9")
              path(d="M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4 12.5-12.5z")
            span Your email is used only for sign-in and notices.

      .panel
        .hero
          h2 Auth Portal
          if user
            p
              | Welcome back,
              | &nbsp;
              span.status
                span.pill
                | #{user.email}
          else
            p Sign up or log in to access your task board.

        if !user
          .grid
            .form-card
              h3 Create an account
              .divider
              form#signupForm
                label(for='suEmail') Email
                .field
                  input#suEmail(type='email' placeholder='you@example.com' required)
                label(for='suPassword') Password
                .field
                  input#suPassword(type='password' placeholder='••••••••' required)
                button.btn(type='submit') Create account
                .form-hint
                  svg(width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round")
                    path(d="M20 6L9 17l-5-5")
                  span Passwords are hashed. Plain text is never stored.
            .form-card
              h3 Welcome back
              .divider
              form#loginForm
                label(for='liEmail') Email
                .field
                  input#liEmail(type='email' placeholder='you@example.com' required)
                label(for='liPassword') Password
                .field
                  input#liPassword(type='password' placeholder='••••••••' required)
                button.btn(type='submit') Log in
                .form-hint
                  svg(width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round")
                    circle(cx="12" cy="12" r="10")
                    path(d="M12 16v-4")
                    path(d="M12 8h.01")
                  span Trouble logging in? Contact your admin.

          p.hint After sign-up or login, you'll be taken to the Task Board.

        else
          .form-card
            h3 You are logged in
            .divider
            form(action="/users/logout" method="post")
              button.btn(type="submit") Log out
          p.hint Click logout to return to login/signup.

  if !user
    //- JS (show-password functionality removed)
    script.
      (function () {
        const signupForm = document.getElementById('signupForm');
        const loginForm = document.getElementById('loginForm');

        signupForm.onsubmit = async (e) => {
          e.preventDefault();
          const email = document.getElementById('suEmail').value.trim();
          const password = document.getElementById('suPassword').value;
          const res = await fetch('/users/signup', {
            method:'POST', headers:{'Content-Type':'application/json'},
            body: JSON.stringify({ email, password })
          });
          const data = await res.json();
          if (!res.ok) return alert(data.error || 'Sign up failed');
          alert('Signed up as ' + data.user.email);
          window.location.href = '/board';
        };

        loginForm.onsubmit = async (e) => {
          e.preventDefault();
          const email = document.getElementById('liEmail').value.trim();
          const password = document.getElementById('liPassword').value;
          const res = await fetch('/users/login', {
            method:'POST', headers:{'Content-Type':'application/json'},
            body: JSON.stringify({ email, password })
          });
          const data = await res.json();
          if (!res.ok) return alert(data.error || 'Login failed');
          alert('Logged in as ' + data.user.email);
          window.location.href = '/board';
        };
      })();
